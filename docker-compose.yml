version: '3'
services:
<<<<<<< Updated upstream
=======

  # nginx:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./certbot:var/certbot:ro
  #   depends_on:
  #     - certbot
  #     - uxtracker.web 
  #     - uxtracker.api 

>>>>>>> Stashed changes
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
<<<<<<< Updated upstream
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - uxtracker.web
      - uxtracker.api
  
=======
      - "443:443"
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certbot:/etc/letsencrypt:ro
    depends_on:
      - uxtracker.web 
      - uxtracker.api 

>>>>>>> Stashed changes
  uxtracker.api:
    image: uxtracker.api
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: uxtracker.api
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - Database__ConnectionString=${DATABASE__CONNECTIONSTRING}
<<<<<<< Updated upstream
=======
      - BlobStorage__ConnectionString=${BLOBSTORAGE__CONNECTIONSTRING}
      - BlobStorage__ContainerName=${BLOBSTORAGE_CONTAINER_NAME}
>>>>>>> Stashed changes
      - SendGrid__ApiKey=${SENDGRID__APIKEY}
      - JwtPrivateKey=${JWT_PRIVATE_KEY}
      - DefaultFromEmail=${DEFAULT_FROM_EMAIL}
      - CorsPolicyName=${CORS_POLICY_NAME}
      - PasswordSaltKey=${PASSWORD_SALT_KEY}
      - FrontendUrl=${FRONTEND_URL}
      - BackendUrl=${BACKEND_URL}
    volumes:
<<<<<<< Updated upstream
      - ./data/images:/app/wwwroot/ConsentTerms
=======
      - /home/rhogger/media/terms:/app/media/terms
>>>>>>> Stashed changes
    ports:
      - "8080:8080"
    restart: always


  uxtracker.web:
    image: uxtracker.web
    build:
      context: .
      dockerfile: Dockerfile.web
    container_name: uxtracker.web
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - FrontendUrl=${FRONTEND_URL}
      - BackendUrl=${BACKEND_URL}
    ports:
      - "8081:8081"
    restart: always
