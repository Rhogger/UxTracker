@page "/projects/new-project"
@inject ISnackbar Snackbar

<AuthorizeView Policy="ResearcherPolicy">
    <MudContainer MaxWidth="MaxWidth.Medium" Class="d-flex flex-column align-items-center gap-4 pa-20">
        <MudText Typo="Typo.h4" Align="Align.Center">Nova pesquisa</MudText>

        <MudPaper Class="pa-4 rounded-lg w-100" Outlined="true">
            <MudForm>
                <MudGrid Spacing="3">
                    <MudItem xs="12">
                        <MudTextField ShrinkLabel="true" T="string" Label="Título" Variant="Variant.Filled" FullWidth="true" />
                    </MudItem>

                    <MudItem xs="12">
                        <MudTextField ShrinkLabel="true" T="string" Label="Descrição" Variant="Variant.Filled" FullWidth="true"
                                      Lines="3" />
                    </MudItem>

                    <MudItem xs="12" sm="6">
                        <MudSelect @bind-Value="Period" T="string" Label="Tipo de periodo" AnchorOrigin="Origin.BottomCenter"
                                   Variant="Variant.Filled">
                            <MudSelectItem Value="@("Diario")">Diario</MudSelectItem>
                            <MudSelectItem Value="@("Diario")">Semanal</MudSelectItem>
                            <MudSelectItem Value="@("Mensal")">Mensal</MudSelectItem>
                            <MudSelectItem Value="@("Anual")">Anual</MudSelectItem>
                        </MudSelect>
                    </MudItem>

                    <MudItem xs="12" sm="6">
                        <MudTextField ShrinkLabel="true" T="string" Label="Quantidade coletas" Variant="Variant.Filled" FullWidth="true" />
                        </MudItem>

                    <MudItem xs="12" sm="12" class="d-flex justify-center mt-4">
                        <MudStack Style="width: 100%">
        <MudFileUpload T="IBrowserFile" 
                   @ref="@_fileUpload"
                   OnFilesChanged="OnInputFileChanged"
                   AcceptedFileTypes="application/pdf"
                   Hidden="@false"
                   InputClass="absolute mud-width-full mud-height-full overflow-hidden z-10"
                   InputStyle="opacity:0"
                   tabindex="-1"
                   @ondrop="@ClearDragClass"
                   @ondragenter="@SetDragClass"
                   @ondragleave="@ClearDragClass"
                   @ondragend="@ClearDragClass">
        <ActivatorContent>
            <MudPaper Height="300px" Outlined="true" Class="d-flex justify-center align-center">
    <MudText Typo="Typo.h6" Align="Align.Center">
        Arraste e solte o Termo de aceite ou clique aqui (somente PDF)
    </MudText>
                @if (_fileName is not null)
                {
                    <MudChip T="string"
                             Color="Color.Dark"
                             Text="@_fileName"
                             tabindex="-1" />
                }
            </MudPaper>
        </ActivatorContent>
    </MudFileUpload>
    <MudToolBar Gutters="@false"
                Class="relative d-flex justify-end gap-4">
        <MudButton Color="Color.Primary"
                   Disabled="@(_fileName is null)"
                   OnClick="@Upload"
                   Variant="Variant.Filled">
            Enviar
        </MudButton>
        <MudButton Color="Color.Error"
                   Disabled="@(_fileName is null)"
                   OnClick="@ClearAsync"
                   Variant="Variant.Filled">
            Limpar
        </MudButton>
    </MudToolBar>
</MudStack>
                    </MudItem>

                    <MudItem xs="12">
                        <MudText Typo="Typo.h6">Relatórios</MudText>
                    </MudItem>

                    <MudItem xs="12" sm="6">
                        <MudCheckBox T="bool" Label="Visão geral da evolução das avaliações" />
                        <MudCheckBox T="bool" Label="Avaliações de cada usuário por período" />
                        <MudCheckBox T="bool" Label="Distribuição das avaliações por período" />
                    </MudItem>

                    <MudItem xs="12" sm="6">
                        <MudCheckBox T="bool" Label="Frequências das avaliações por intervalo de tempo" />
                        <MudCheckBox T="bool" Label="Número adequado de clusters de usuários" />
                        <MudCheckBox T="bool" Label="Média da experiência do usuário ao longo do período" />
                    </MudItem>

                    <MudItem xs="12" class="d-flex justify-center mt-4">
                        <MudButton Href="/projects" Variant="Variant.Filled" Color="Color.Secondary" Class="py-2 px-15">
                            Voltar
                        </MudButton>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="py-2 px-15">
                            Salvar
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </MudForm>
        </MudPaper>
    </MudContainer>
</AuthorizeView>



@code
{
    IList<IBrowserFile> files = new List<IBrowserFile>();
    private string Period { get; set; }

    private void UploadFiles2(IBrowserFile file)
    {
        files.Add(file);
    }

    // Drag and drop
    #nullable enable
    private const string DefaultDragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full";
    private string _dragClass = DefaultDragClass;
    private string? _fileName;
    private MudFileUpload<IBrowserFile>? _fileUpload;

    private async Task ClearAsync()
    {
        await (_fileUpload?.ClearAsync() ?? Task.CompletedTask);
        _fileName = null;
        ClearDragClass();
    }

    private Task OpenFilePickerAsync()
        => _fileUpload?.OpenFilePickerAsync() ?? Task.CompletedTask;

    private void OnInputFileChanged(InputFileChangeEventArgs e)
    {
        ClearDragClass();
        var file = e.File;

        if (file.ContentType == "application/pdf")
        {
            _fileName = file.Name;
        }
        else
        {
            Snackbar.Add($"Arquivo '{file.Name}' não é um PDF.", Severity.Error);
        }
    }

    private void Upload()
    {
        Snackbar.Configuration.PositionClass = Defaults.Classes.Position.TopCenter;
        Snackbar.Add("Arquivo enviado com sucesso!.", Severity.Success);
    }

    private void SetDragClass()
        => _dragClass = $"{DefaultDragClass} mud-border-primary";

    private void ClearDragClass()
        => _dragClass = DefaultDragClass;
}